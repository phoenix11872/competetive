vector<ll>arr;
vector<ll>sgt;
ll mergeNodes(ll left, ll right, ll start, ll end) {
    return (left & right);
}
void build(ll idx, ll start, ll end) {
    if (start == end) {
        sgt[idx] = arr[start];
        return;
    }
    ll mid = (start + end) / 2;
    build(idx * 2, start, mid);
    build(idx * 2 + 1, mid + 1, end);
    sgt[idx] = mergeNodes(sgt[idx * 2], sgt[idx * 2 + 1], start, end);
}

void update(ll idx, ll start, ll end, ll pos, ll x) {
    if (start == end) {
        // arr[pos] = x;
        sgt[idx] = x;
        return;
    }
    ll mid = (start + end) / 2;
    if (pos <= mid) {
        update(2 * idx, start, mid , pos, x);
    } else {
        update(2 * idx + 1, mid + 1, end, pos, x);
    }
    sgt[idx] = mergeNodes(sgt[idx * 2], sgt[idx * 2 + 1], start, end);
}

ll query(ll idx, ll start , ll end, ll l, ll r) {
    if (start >= l && end <= r) {
        return sgt[idx];
    } else if (start > r || end < l) {
        return 1;
    }
    ll mid = (start + end) / 2;
    ll lans = query(idx * 2, start, mid, l , r);
    ll rans = query(idx * 2 + 1, mid + 1, end, l, r);
    return mergeNodes(lans, rans, start, end);
}

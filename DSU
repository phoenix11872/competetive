
class DSU {

public:
    vector<ll>rank, sz, parent;
    DSU(int n) {
        rank.resize(n);
        sz.resize(n);
        parent.resize(n);
        

        for (int i = 0 ; i < n; i++) {
            rank[i] = 1;
            parent[i] = i;
            sz[i] = 1;
        }
    }
    

    int get(int a) {
        if (parent[a] == a)return a;
        return parent[a] = get(parent[a]);
    }
    void uni(int a, int b) {//a->b
        a = get(a);
        b = get(b);
        if (a == b)return;
       
        if (rank[a] == rank[b])rank[a]++;
        if (rank[a] > rank[b]) {
            parent[b] = a;
            sz[a] += sz[b];
        }
        else {
            parent[a] = b;
            sz[b] += sz[a];

        }
    }

};
